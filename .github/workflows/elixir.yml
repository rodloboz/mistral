name: Elixir CI

on:
  pull_request:
  push:
    branches: [main]
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CACHE_VERSION: v1

jobs:
  build:
    name: "Build and test (Elixir ${{ matrix.elixir }}, OTP ${{ matrix.otp }})"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    strategy:
      matrix:
        include:
          - elixir: '1.18.1'
            otp: '27.0'
          - elixir: '1.16.0'
            otp: '26.2'
          - elixir: '1.15.7'
            otp: '25.3'
          - elixir: '1.13.4'
            otp: '24.3'
    env:
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ env.MIX_ENV }}-${{ env.CACHE_VERSION }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ github.head_ref || github.ref }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ env.MIX_ENV }}-${{ env.CACHE_VERSION }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ github.head_ref || github.ref }}-
            ${{ env.MIX_ENV }}-${{ env.CACHE_VERSION }}-${{ matrix.elixir }}-${{ matrix.otp }}-refs/heads/main-

      - run: mix deps.get --only $MIX_ENV
      - run: mix compile --warnings-as-errors --all-warnings
      - run: mix test
      - run: mix coveralls.json --warnings-as-errors

      - name: Post Coverage Comment
        run: |
          COVERAGE=$(jq '.coverage' cover/excoveralls.json)
          echo "🔍 Test Coverage: **$COVERAGE%**" > coverage_comment.md
          gh pr comment ${{ github.event.pull_request.number }} --body "$(cat coverage_comment.md)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Coverage Badge
        run: |
          COVERAGE=$(jq '.coverage' cover/excoveralls.json)
          echo '{"schemaVersion": 1, "label": "coverage", "message": "'"$COVERAGE%"'", "color": "green"}' > badge.json

      - name: Upload Coverage Badge
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git checkout main
          mv badge.json coverage-badge.json
          git add coverage-badge.json
          git commit -m "Update coverage badge"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  static:
    name: Static checks (format, credo)
    env:
      MIX_ENV: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18.1'
          otp-version: '27.0'

      - uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: static-${{ env.MIX_ENV }}-${{ env.CACHE_VERSION }}-${{ github.head_ref || github.ref }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            static-${{ env.MIX_ENV }}-${{ env.CACHE_VERSION }}-${{ github.head_ref || github.ref }}-
            static-${{ env.MIX_ENV }}-${{ env.CACHE_VERSION }}-refs/heads/main-

      - run: mix deps.get
      - run: mix compile --warnings-as-errors --all-warnings
      - run: mix format --check-formatted
      - run: mix credo --strict
